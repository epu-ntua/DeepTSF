stages:
  - build-app
  - deploy-dev

# Build the Docker image for the React app and push it to Harbor
build-app:
  stage: build-app
  image: harbor.deployai.eu/cvm-public/ci-tools
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
  before_script:
    - docker info
  script:
    - echo "Logging into Harbor using Robot Account..."
    - echo ${HARBOR_ROBOT_PASSWORD} | docker login ${HARBOR_HOST} -u ${HARBOR_ROBOT_USER} --password-stdin

    - echo "Building Docker image for deeptsf backend..."
    - docker build -t ${HARBOR_HOST}/iccs/deeptsf-backend:latest deeptsf_backend
    - echo "Pushing Docker image to Harbor..."
    - docker push ${HARBOR_HOST}/iccs/deeptsf-backend:latest


    - echo "Building Docker image for dagster..."
    - docker build -t ${HARBOR_HOST}/iccs/deeptsf-dagster:latest deeptsf_backend/dagster-deeptsf/config
    - echo "Pushing Docker image to Harbor..."
    - docker push ${HARBOR_HOST}/iccs/deeptsf-dagster:latest

  only:
    - master
  tags:
    - shared

# Deploy the app using Helm and Rancher
deploy-dev:
  stage: deploy-dev
  image: harbor.deployai.eu/cvm-public/ci-tools
  dependencies:
    - build-app
  before_script:
    - echo "Secure the KUBECONFIG file"
    - chmod 600 ${KUBECONFIG}
  script:
    - echo "Checking Kubernetes cluster connectivity..."
    - kubectl get nodes
    - echo "Deploying to Rancher using Helm..."
    - helm upgrade --install deeptsf-backend ./helm-chart -f helm-chart/values.yaml --namespace iccs --set storageClassName=longhorn --set registry.password=${HARBOR_ROBOT_PASSWORD} --set registry.username=${HARBOR_ROBOT_USER} --set registry.registry=${HARBOR_HOST} --set commitHash=${CI_COMMIT_SHA} --set app.env.AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} --set app.env.AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} --set app.env.MINIO_CLIENT_URL=${MINIO_CLIENT_URL} --set app.env.MINIO_SSL=${MINIO_SSL} --set app.env.MLFLOW_TRACKING_URI=${MLFLOW_TRACKING_URI} --set app.env.MLFLOW_S3_ENDPOINT_URL=${MLFLOW_S3_ENDPOINT_URL} --set app.env.MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY} --set app.env.MINIO_SECRET_KEY=${MINIO_SECRET_KEY} --set app.env.USE_KEYCLOAK=${USE_KEYCLOAK} --set app.env.KEYCLOAK_ID=${KEYCLOAK_ID} --set app.env.KEYCLOAK_SECRET=${KEYCLOAK_SECRET} --set app.env.TOKEN_ISSUER_URL=${TOKEN_ISSUER_URL}
  only:
    - master
  tags:
    - shared
  environment:
    name: dev