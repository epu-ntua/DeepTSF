run_storage:
  module: dagster_postgres.run_storage
  class: PostgresRunStorage
  config:
    postgres_db:
      username: {env: POSTGRES_USER}
      password: {env: POSTGRES_PASSWORD}
      hostname: pgdb
      db_name: dagster_celery
      port: 5432

event_log_storage:
  module: dagster_postgres.event_log
  class: PostgresEventLogStorage
  config:
    postgres_db:
      username: {env: POSTGRES_USER}
      password: {env: POSTGRES_PASSWORD}
      hostname: pgdb
      db_name: dagster_celery
      port: 5432

schedule_storage:
  module: dagster_postgres.schedule_storage
  class: PostgresScheduleStorage
  config:
    postgres_db:
      username: {env: POSTGRES_USER}
      password: {env: POSTGRES_PASSWORD}
      hostname: pgdb
      db_name: dagster_celery
      port: 5432

compute_logs:
  module: dagster_aws.s3.compute_log_manager
  class: S3ComputeLogManager
  config:
    bucket: "dagster-storage"
    local_dir: "/app/dagster_deeptsf/storage/"
    prefix: "dagster-compute-logs"
    use_ssl: true
    verify: false
    endpoint_url: {env: MLFLOW_S3_ENDPOINT_URL}
    skip_empty_files: true
    upload_interval: 1
    show_url_only: false

# compute_logs:
#   module: dagster_deeptsf.MyS3ComputeLogManager
#   class: MyS3ComputeLogManager
#   config:
#     access_key: "accessminio"
#     secret_key: "secretminio"
#     bucket: "dagster-compute-logs"
#     local_dir: "/app/dagster_deeptsf/storage/"
#     prefix: "dagster-test"
#     use_ssl: false
#     verify: false
#     endpoint_url: "http://s3:9000"
#     skip_empty_files: false
#     upload_interval: 1
#     show_url_only: false

    # run_launcher:
#   module: dagster.core.launcher.default_run_launcher
#   class: DefaultRunLauncher
#   config:
#     working_directory: "/app/dagster-deeptsf/dagster_deeptsf"
# scheduler:
#   module: dagster_cron.cron_scheduler
#   class: SystemCronScheduler