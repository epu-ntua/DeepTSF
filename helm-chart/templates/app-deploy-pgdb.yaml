apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.pgdb.service.name }}
  labels:
    release: {{ .Release.Name }}
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 5432    
      protocol: TCP
      targetPort: 5432
  selector:
    app: {{ .Values.pgdb.service.name }}
    release: {{ .Release.Name }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.pgdb.service.name }}
  labels:
    app: {{ .Values.pgdb.service.name }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.pgdb.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.pgdb.service.name }}
      release: {{ .Release.Name }} 
  template:
    metadata:
      labels:
        app: {{ .Values.pgdb.service.name }}
        release: {{ .Release.Name }}
    spec:
      imagePullSecrets: 
      - name: {{ .Release.Name }}-image-pull-secret
      containers:
      - name: deeptsf-pgdb
        image: "{{ .Values.pgdb.image.repository }}:{{ .Values.pgdb.image.tag }}"
        imagePullPolicy: Always
        resources:
          limits:
            memory: {{ .Values.pgdb.memory_limit | quote }}
        env:
        - name: POSTGRES_USER
          value: {{ required "POSTGRES_USER environment variable is required" .Values.env.POSTGRES_USER | quote }}
        - name: POSTGRES_DATABASE
          value: {{ required "POSTGRES_DATABASE environment variable is required" .Values.env.POSTGRES_DATABASE | quote }}
        - name: POSTGRES_PASSWORD
          value: {{ required "POSTGRES_PASSWORD environment variable is required" .Values.env.POSTGRES_PASSWORD | quote }}
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - containerPort: 5432

        volumeMounts:
          - name: database
            mountPath: /var/lib/postgresql/data

      volumes:
        - name: database
          persistentVolumeClaim:
            claimName: "{{ .Release.Name }}-pgdb-storage-pvc"

