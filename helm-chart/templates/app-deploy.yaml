apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-{{ .Values.app.service.name }}"
  labels:
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.app.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.app.service.name }}
      release: {{ .Release.Name }} 
  template:
    metadata:
      labels:
        app: {{ .Values.app.service.name }}
        release: {{ .Release.Name }}
    spec:
      imagePullSecrets: 
      - name: {{ .Release.Name }}-image-pull-secret
      initContainers:
      - name: minio-init
        image: minio/minio:latest
        command: ["sh", "-c", "mc alias set myminio $MINIO_CLIENT_URL $AWS_ACCESS_KEY_ID $AWS_SECRET_ACCESS_KEY && mc mb myminio/mybucket"]
        env:
        - name: MINIO_CLIENT_URL
          valueFrom:
            secretKeyRef:
              name: minio-secret
              key: client-url
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-secret
              key: access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-secret
              key: secret-access-key
      containers:
      - name: deeptsf-backend
        image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}"
        imagePullPolicy: Always
        resources:
          limits:
            memory: {{ .Values.app.memory_limit | quote }}
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-{{ .Values.app.service.name }}-cm
        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-secret
              key: access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-secret
              key: secret-access-key
        ports:
        - containerPort: 80